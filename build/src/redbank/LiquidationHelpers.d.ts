import BigNumber from "bignumber.js";
import { Collateral, Debt } from "../query/types";
import { AssetParamsBaseForAddr, Coin } from "../types/marsParams";
export declare const calculatePositionLtv: (debts: Debt[], collaterals: Collateral[], prices: Map<string, number>, assetParams: Map<string, AssetParamsBaseForAddr>) => number;
export declare const calculateCollateralRatio: (debts: Debt[], collaterals: Collateral[], prices: Map<string, number>) => BigNumber;
export declare const calculateMaxDebtRepayable: (targetHealthFactor: number, debts: Debt[], collaterals: Collateral[], assetParams: Map<string, AssetParamsBaseForAddr>, liquidationBonus: number, prices: Map<string, number>, claimedCollateralDenom: string) => BigNumber;
export declare const calculateLiquidationBonus: (bonusStart: number, slope: number, healthFactor: number, maxLbSetting: number, minLbSetting: number, collateralRatio: number) => number;
export declare const getTotalLtvValueOfCollateral: (collateral: Collateral[], prices: Map<string, number>, assetParams: Map<string, AssetParamsBaseForAddr>) => BigNumber;
export declare const getTotalLiquidationThresholdValueOfCollateral: (collateral: Collateral[], prices: Map<string, number>, assetParams: Map<string, AssetParamsBaseForAddr>) => BigNumber;
export declare const getLiquidationThresholdHealthFactor: (collateral: Collateral[], debts: Debt[], prices: Map<string, number>, assetParams: Map<string, AssetParamsBaseForAddr>) => number;
export declare const getTotalValueOfCoinArray: (coins: Coin[], prices: Map<string, number>) => BigNumber;
